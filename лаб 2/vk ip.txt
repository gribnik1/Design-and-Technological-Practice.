import requests
import matplotlib.pyplot as plt
import collections

# Функция для получения информации о подписчиках группы VK
def get_vk_group_members(group_id, access_token):
    url = f"https://api.vk.com/method/groups.getMembers?group_id={group_id}&fields=bdate,sex,universities&access_token={access_token}&v=5.131"
    response = requests.get(url)
    data = response.json()
    members = data["response"]["items"]
    return members

# Задаем параметры запроса
group_id = "kzngo"
access_token = "vk1.a.oXDcZk9lZg-QGVkA2lCBmeJ1UcD6uDgUyMcZtN3J6rjgpKcCz2iwalfGOqVuXLZPvNLOTXt4RZf_jJR82itrPbB2ilFr-qYCA_-_mc_Ig6XobVo7er8rbFc7r4fdV7vV0RJnkUskhFJaPO4WJYQKm0JwnHpcScgbevesy9ElQQqmd7xHurVY2jH_Dk3Z1KS7m52KOnPWFhughXiPHwGQIw&expires_in=86400&user_id=410950368"

# Получаем подписчиков группы VK
members = get_vk_group_members(group_id, access_token)

from datetime import datetime

# Шаг 1: Получение информации о поле и возрасте подписчиков
sex_list = []
age_list = []
for member in members:
    # Получаем пол подписчика
    sex = member.get("sex")
    if sex:
        sex_list.append(sex)
    # Получаем возраст подписчика
    bdate = member.get("bdate")
    if bdate:
        try:
            birth_year = int(bdate.split(".")[-1])
            age = datetime.now().year - birth_year
            if age <= 100:  # Исправление: не выводить возраст больше 100 в гистограмму
                age_list.append(age)
        except:
            pass

# Шаг 2: Построение круговой диаграммы по полу подписчиков
sex_counts = collections.Counter(sex_list)
labels = ["Мужчины", "Женщины"]
sizes = [sex_counts.get(2, 0), sex_counts.get(1, 0)]
colors = ["skyblue", "pink"]

plt.figure(figsize=(6, 6))
plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)
plt.title("Распределение подписчиков группы VK по полу")
plt.axis("equal")
plt.show()

# Шаг 3: Построение столбцовой диаграммы по возрасту подписчиков
age_counts = collections.Counter(age_list)
labels = sorted(age_counts.keys())
counts = [age_counts[label] for label in labels]

# Порог для объединения вкладки "Другое"
threshold = 0.02 * sum(counts)

# Проверка, является ли элемент меньше порога
def check_threshold(value):
    return value if value >= threshold else "Другое"

# Замена элементов, меньших порога, на вкладку "Другое"
labels = [check_threshold(label) for label in labels]

plt.figure(figsize=(10, 6))
plt.bar(labels, counts)
plt.xlabel("Возраст")
plt.ylabel("Количество подписчиков")
plt.title("Распределение подписчиков группы VK по возрасту")
plt.show()

# Шаг 4: Получение информации о вузе подписчиков
university_list = []
for member in members:
    universities = member.get("universities")
    if universities:
        for university in universities:
            university_name = university.get("name")
            if university_name:
                university_list.append(university_name)

# Шаг 5: Построение гистограммы по вузам подписчиков
university_counts = collections.Counter(university_list)
top_universities = [uni for uni in university_counts.most_common(10) if uni[0]]

# Вычисляем общее количество подписчиков во всех вузах
total_count = sum(university_counts.values())

# Вычисляем количество подписчиков в других вузах
other_count = total_count - sum(top_universities[1] for top_universities in top_universities)

# Добавляем вкладку "Другие вузы"
if other_count > 0:
    labels = [uni[0] for uni in top_universities] + ["Другие вузы"]  # Исправление: выводить название вузов вместо цифр
    counts = [uni[1] for uni in top_universities] + [other_count]

x = range(len(labels))

plt.figure(figsize=(10, 6))
plt.bar(x, counts)
plt.xlabel('Вузы')
plt.ylabel('Количество подписчиков')
plt.title('Распределение подписчиков группы VK по вузам (Топ-10)')
plt.xticks(x, labels, rotation='vertical')
plt.show()